import{x as m,q as $,V as d,d as p,c as g,F as h,M as w,g as a,S as f,C as b,l as y,a as k,u as v,$ as B,b as x,e as j}from"./index.99728eb8.js";const C="src/lib/Banner.svelte";function u(s){let n,c,o;const i=s[2].default,t=g(i,s,s[1],null),l={c:function(){n=w("div"),t&&t.c(),a(n,"style",c=`background-image: url("${s[0]}")`),a(n,"class","s-dQZucNedGvzR"),f(n,C,4,0,38)},l:function(e){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(e,r){b(e,n,r),t&&t.m(n,null),o=!0},p:function(e,[r]){t&&t.p&&(!o||r&2)&&y(t,i,e,e[1],o?k(i,e[1],r,null):v(e[1]),null),(!o||r&1&&c!==(c=`background-image: url("${e[0]}")`))&&a(n,"style",c)},i:function(e){o||(B(t,e),o=!0)},o:function(e){x(t,e),o=!1},d:function(e){e&&j(n),t&&t.d(e)}};return p("SvelteRegisterBlock",{block:l,id:u.name,type:"component",source:"",ctx:s}),l}function E(s,n,c){let{$$slots:o={},$$scope:i}=n;h("Banner",o,["default"]);let{img:t}=n;const l=["img"];return Object.keys(n).forEach(e=>{!~l.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&console.warn(`<Banner> was created with unknown prop '${e}'`)}),s.$$set=e=>{"img"in e&&c(0,t=e.img),"$$scope"in e&&c(1,i=e.$$scope)},s.$capture_state=()=>({img:t}),s.$inject_state=e=>{"img"in e&&c(0,t=e.img)},n&&"$$inject"in n&&s.$inject_state(n.$$inject),[t,i,o]}class O extends m{constructor(n){super(n),$(this,n,E,u,d,{img:0}),p("SvelteRegisterComponent",{component:this,tagName:"Banner",options:n,id:u.name});const{ctx:c}=this.$$,o=n.props||{};c[0]===void 0&&!("img"in o)&&console.warn("<Banner> was created without expected prop 'img'")}get img(){throw new Error("<Banner>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set img(n){throw new Error("<Banner>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{O};
